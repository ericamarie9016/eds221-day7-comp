---
title: "Joins and Strings and Dates"
format: html
editor: visual
---

## Joins

```{r}
library(tidyverse)

animals <- tibble::tribble(
             ~location,   ~species,  ~maturity,
              "lagoon",   "bobcat",    "adult",
               "bluff",   "coyote", "juvenile",
               "creek",      "fox",    "adult",
                "oaks", "squirrel", "juvenile",
               "bluff",   "bobcat",    "adult"
             )
sites <- tibble::tribble(
           ~location,      ~full_site_name, ~jurisdiction,
             "beach",       "Goleta Beach",     "SB City",
            "lagoon",        "UCSB Lagoon",        "UCSB",
             "bluff",       "Ellwood Mesa",     "SB City",
              "oaks", "Fremont Campground",        "USFS"
           )
sites2 <- sites |> 
  rename(loc = location)
```

### Full Join

```{r}
full_join_example <- full_join(animals, sites, by = "location")
full_join_ex2 <- full_join(animals, sites2, by = c("location" = "loc"))
```

### Left Join

```{r}
left_join_example <- left_join(animals, sites, by = "location")
```

### Inner Join

```{r}
inner_join_example <- inner_join(animals, sites, by = "location")
```

### Semi Join: Filtering join

```{r}
semi_join_example <- semi_join(animals, sites, by = "location")
```

### Anti Join: Filtering join

```{r}
anti_join_example <- anti_join(animals, sites, by = "location")
```

## Dates and Times with `lubridate`

```{r}
my_date <- "03-15-1998"
class(my_date)
lubridate::mdy(my_date)

my_date <- "11/7/2004"
lubridate::dmy(my_date)

my_date <- "08-Jun-1974"
lubridate::dmy(my_date)

my_date <- "19610518"
my_real_date <- lubridate::ymd(my_date)
class(my_date)
class(my_real_date)
```

Can this fail? Yes! Will not parse impossible dates

```{r}
time <- "2020-08-12 11:18"
time <- lubridate::ymd_hm(time)
class(time)
```

```{r}
with_tz(time, "Asia/Jakarta")


```

Try to pull apart components

```{r}

my_time <- lubridate::ymd_hms(time)
year(my_time)
second(my_time)
```

```{r}
teddy_bday <- lubridate::ymd("20170615")
wday(teddy_bday, label = TRUE)

wday(lubridate::ymd("19900707"), label = TRUE)
week(lubridate::ymd("19900707"))
```

Take a data frame, change date into date class, add columns

```{r}
urchin_counts <- tribble(
  ~date, ~species, ~size_mm,
  "10/3/2020", "purple", 55,
  "10/4/2020", "red", 48,
  "11/17/2020", "red", 67
)

urchin_ymd <- urchin_counts |> 
  mutate(date = mdy(date)) |> 
  mutate(year = year(date),
         month = month(date),
         day = day(date))

class(urchin_ymd$date)
```

### Calculating duration and intervals

```{r}
day_1 <- ymd("2020-01-06")
day_2 <- ymd("2020-05-18")

time_interval <- interval(day_1, day_2)

time_length(time_interval, "day")

```

## Stringr for working with strings

### str_detect

```{r}
my_string <- "Teddy loves eating salmon and socks."

my_string |> 
  str_detect("love") # TRUE

my_string |> 
  str_detect("pup") # FALSE


# Vectorized
my_string <-  c("burrito", "fish taco", "taco salad")

my_string |> 
  str_detect("fish")
```

Applying to datasets and creating subsets

```{r}
skywalkers <- starwars |> 
  filter(str_detect(name, pattern = "Skywalker"))

maul <- starwars |> 
  filter(str_detect(name, pattern = "maul"))

blue <- starwars |> 
  filter(str_detect(eye_color, pattern = "blue"))
```

### str_replace

Change part of a name, in a new column

```{r}
firewalkers <- starwars |> 
  mutate(fire_name = str_replace(name, pattern = "Sky", replacement = "Fire"))
```

### Clean data format

Cleaning functions with data

Remove white spaces, Change capitalization

```{r}
feedback <- c("  I ate   some    nachos", "Wednesday morning   ")
str_trim(feedback)
str_squish(feedback)

str_to_lower(feedback)
str_to_title(feedback)
str_to_sentence(feedback)
```

```{r}
starwars_lc <- starwars |> 
  mutate(name_lower = str_to_lower(name))
```

## case_when()

if this true, do this

```{r}
sw_robot <- starwars |> 
  mutate(robot_status = case_when(
    species == "Droid" ~ "A ROBOT!",
    species == "Human" ~ "It's a human!",
    TRUE ~ "This is something else."
  ))
```
